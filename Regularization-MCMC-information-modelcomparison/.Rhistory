mean=theta_Full[1] + theta_Full[2]*vali_data$area + theta_Full[3]*vali_data$antal_rum +
theta_Full[4]*vali_data$avgift + theta_Full[5]*vali_data$trappor +
theta_Full[6]*vali_data$cityyes + theta_Full[7]*vali_data$sydyes,
sd=exp(theta_Full_vali[8]) ,
log=TRUE ) )
theta_Full <- coef(resNormal_Full)
theta_Full <- coef(resNormal_Full)
dev_Full_Vali <- (-2)*sum( dnorm(
vali_data$y ,
mean=theta_Full[1] + theta_Full[2]*vali_data$area + theta_Full[3]*vali_data$antal_rum +
theta_Full[4]*vali_data$avgift + theta_Full[5]*vali_data$trappor +
theta_Full[6]*vali_data$cityyes + theta_Full[7]*vali_data$sydyes,
sd=exp(theta_Full[8]) ,
log=TRUE ) )
dev_Full_Vali
#
dev_Null_Train
dev_Null_Vali
#
dev_EnXvar_Train
dev_EnXvar_Vali
#
dev_Full_Train
dev_Full_Vali
# --- --- f)
WAIC_EnXvar_2ndKorr  <- WAIC(resNormal_EnXvar_2ndKorr)[1]
WAIC_df <- data.frame("Modell" = c(WAIC_EnXvar ,WAIC_EnXvar_2ndKorr, WAIC_Full), "Weight" = c(NA,NA,NA))
rownames(WAIC_df)<-c("EnXvar","EnXvar_2ndkorr","FULL")
for(i in 1:nrow(WAIC_df)) {
WAIC_df[i,2] <- exp(-0.5 * (WAIC_df[i,1] - min(WAIC_df[,1]))) /
sum(exp(-0.5 * (WAIC_df[,1] - min(WAIC_df[,1]))))
}
precis(resNormal_EnXvar)
precis(resNormal_EnXvar_2ndKorr)
precis(resNormal_Full)
WAIC_df
require(rethinking)
load("C:/Users/Jakob/Desktop/Bayesian statistics/lab2/Data_Moment2.RData")
X <- as.data.frame(X)
set.seed(970922);y <- rnorm(n,A,B)
data <- data.frame(y/1000,scale(X[,1:4]),X[,5:6])
colnames(data) <- c("y","area","antal_rum","avgift","trappor","cityyes","sydyes")
#Null modell
flist <- alist(
y ~ dnorm(mu, exp(logsigma)) , # likelihood fr?n normalf?rdelning, liter per mil
mu ~ dnorm( 3 , 10 ) , # normalf?rdelad prior
logsigma ~ dnorm ( 0 , 1 )
)
resNormal_Null <- map(flist, data=data)
precis(resNormal_Null)
#En variabel
flist <- alist(
y ~ dnorm(mu, exp(logsigma)) , # likelihood fr?n normalf?rdelning, liter per mil
mu <- b0 + b1*area , # hur mu ?r l?nkad till f?rklaringsvariabler.
b0 ~ dnorm( 3 , 10 ) , # normalf?rdelad prior f?r intercept
b1 ~ dnorm( 0 , 10 ) ,
logsigma ~ dnorm ( 0, 1 )
)
resNormal_EnXvar <- map(flist, data=data)
precis(resNormal_EnXvar)
#Full modell
flist <- alist(
y ~ dnorm(mu, exp(logsigma)) , # likelihood fr?n normalf?rdelning, liter per mil
mu <- b0 + b1*area + b2*antal_rum + b3*avgift + b4*trappor + b5*cityyes + b6*sydyes, # hur mu ?r l?nkad till f?rklaringsvariabler.
b0 ~ dnorm( 3 , 10 ) , # normalf?rdelad prior f?r intercept
c(b1,b2,b3,b4) ~ dnorm( 0 , 10 ) ,
c(b5,b6) ~ dnorm( 0 , 10 ) ,
logsigma ~ dnorm ( 0, 1 )
)
resNormal_Full <- map(flist, data=data)
precis(resNormal_Full)
#Null modell vali
flist <- alist(
y ~ dnorm(mu, exp(logsigma)) , # likelihood fr?n normalf?rdelning, liter per mil
mu ~ dnorm( 3 , 10 ) , # normalf?rdelad prior
logsigma ~ dnorm ( 0 , 1 )
)
resNormal_Null_vali <- map(flist, data=vali_data)
train_data <- data[1:29,]
vali_data <- data[30:57,]
#Null modell vali
flist <- alist(
y ~ dnorm(mu, exp(logsigma)) , # likelihood fr?n normalf?rdelning, liter per mil
mu ~ dnorm( 3 , 10 ) , # normalf?rdelad prior
logsigma ~ dnorm ( 0 , 1 )
)
resNormal_Null_vali <- map(flist, data=vali_data)
precis(resNormal_Null)
#Null modell traindata
flist <- alist(
y ~ dnorm(mu, exp(logsigma)) , # likelihood fr?n normalf?rdelning, liter per mil
mu ~ dnorm( 3 , 10 ) , # normalf?rdelad prior
logsigma ~ dnorm ( 0 , 1 )
)
resNormal_Null_vali <- map(flist, data=train_data)
precis(resNormal_Null)
#En variabel
flist <- alist(
y ~ dnorm(mu, exp(logsigma)) , # likelihood fr?n normalf?rdelning, liter per mil
mu <- b0 + b1*area , # hur mu ?r l?nkad till f?rklaringsvariabler.
b0 ~ dnorm( 3 , 10 ) , # normalf?rdelad prior f?r intercept
b1 ~ dnorm( 0 , 10 ) ,
logsigma ~ dnorm ( 0, 1 )
)
resNormal_EnXvar <- map(flist, data=train_data)
precis(resNormal_EnXvar)
#Full modell
flist <- alist(
y ~ dnorm(mu, exp(logsigma)) , # likelihood fr?n normalf?rdelning, liter per mil
mu <- b0 + b1*area + b2*antal_rum + b3*avgift + b4*trappor + b5*cityyes + b6*sydyes, # hur mu ?r l?nkad till f?rklaringsvariabler.
b0 ~ dnorm( 3 , 10 ) , # normalf?rdelad prior f?r intercept
c(b1,b2,b3,b4) ~ dnorm( 0 , 10 ) ,
c(b5,b6) ~ dnorm( 0 , 10 ) ,
logsigma ~ dnorm ( 0, 1 )
)
resNormal_Full <- map(flist, data=train_data)
theta_Null <- coef(resNormal_Null_train)
train_data <- data[1:29,]
vali_data <- data[30:57,]
#Null modell traindata
flist <- alist(
y ~ dnorm(mu, exp(logsigma)) , # likelihood fr?n normalf?rdelning, liter per mil
mu ~ dnorm( 3 , 10 ) , # normalf?rdelad prior
logsigma ~ dnorm ( 0 , 1 )
)
resNormal_Null_train <- map(flist, data=train_data)
#En variabel
flist <- alist(
y ~ dnorm(mu, exp(logsigma)) , # likelihood fr?n normalf?rdelning, liter per mil
mu <- b0 + b1*area , # hur mu ?r l?nkad till f?rklaringsvariabler.
b0 ~ dnorm( 3 , 10 ) , # normalf?rdelad prior f?r intercept
b1 ~ dnorm( 0 , 10 ) ,
logsigma ~ dnorm ( 0, 1 )
)
resNormal_EnXvar_train <- map(flist, data=train_data)
precis(resNormal_EnXvar)
precis(resNormal_Null)
#Full modell
flist <- alist(
y ~ dnorm(mu, exp(logsigma)) , # likelihood fr?n normalf?rdelning, liter per mil
mu <- b0 + b1*area + b2*antal_rum + b3*avgift + b4*trappor + b5*cityyes + b6*sydyes, # hur mu ?r l?nkad till f?rklaringsvariabler.
b0 ~ dnorm( 3 , 10 ) , # normalf?rdelad prior f?r intercept
c(b1,b2,b3,b4) ~ dnorm( 0 , 10 ) ,
c(b5,b6) ~ dnorm( 0 , 10 ) ,
logsigma ~ dnorm ( 0, 1 )
)
resNormal_Full_train <- map(flist, data=train_data)
theta_Null <- coef(resNormal_Null_train)
dev_Null_Train <- (-2)*sum( dnorm(
train_data$y ,
mean=theta_Null[1] ,
sd=exp(theta_Null[2]) ,
log=TRUE ) )
dev_Null_Train
theta_EnXvar <- coef(resNormal_EnXvar_train)
dev_EnXvar_Train <- (-2)*sum( dnorm(
train_data$y ,
mean=theta_EnXvar[1] + theta_EnXvar[2]*train_data$area,
sd=exp(theta_EnXvar[3]) ,
log=TRUE ) )
dev_EnXvar_Train
# Deviance Full
theta_Full <- coef(resNormal_Full_train)
dev_Full_Train <- (-2)*sum( dnorm(
train_data$y ,
mean=theta_Full[1] + theta_Full[2]*train_data$area + theta_Full[3]*train_data$antal_rum +
theta_Full[4]*train_data$avgift + theta_Full[5]*train_data$trappor +
theta_Full[6]*train_data$cityyes + theta_Full[7]*train_data$sydyes,
sd=exp(theta_Full[8]) ,
log=TRUE ) )
theta_Null <- coef(resNormal_Null_train)
dev_Null_Vali <- (-2)*sum( dnorm(
vali_data$y ,
mean=theta_Null[1] ,
sd=exp(theta_Null[2]) ,
log=TRUE ) )
dev_Null_Vali
theta_Full <- coef(resNormal_Full_train)
theta_EnXvar <- coef(resNormal_EnXvar_train)
dev_EnXvar_Vali <- (-2)*sum( dnorm(
vali_data$y ,
mean=theta_EnXvar[1] + theta_EnXvar[2]*vali_data$area,
sd=exp(theta_EnXvar[3]) ,
log=TRUE ) )
dev_EnXvar_Vali
theta_Full <- coef(resNormal_Full_train)
dev_Full_Vali <- (-2)*sum( dnorm(
vali_data$y ,
mean=theta_Full[1] + theta_Full[2]*vali_data$area + theta_Full[3]*vali_data$antal_rum +
theta_Full[4]*vali_data$avgift + theta_Full[5]*vali_data$trappor +
theta_Full[6]*vali_data$cityyes + theta_Full[7]*vali_data$sydyes,
sd=exp(theta_Full[8]) ,
log=TRUE ) )
dev_Full_Vali
sample_EnXvar <- extract.samples(resNormal_EnXvar,n = 1e4)
sample_EnXvar2ndKorr <- extract.samples(resNormal_EnXvar_2ndKorr,n = 1e4)
sample_Full <- extract.samples(resNormal_Full,n=1e4)
#i
flist <- alist(
y ~ dnorm(mu, exp(logsigma)) , # likelihood fr?n normalf?rdelning, liter per mil
mu <- b0 + b1*antal_rum , # hur mu ?r l?nkad till f?rklaringsvariabler.
b0 ~ dnorm( 3 , 10 ) , # normalf?rdelad prior f?r intercept
b1 ~ dnorm( 0 , 10 ) ,
logsigma ~ dnorm ( 0, 1 )
)
resNormal_EnXvar_2ndKorr <- map(flist, data=data)
sample_EnXvar <- extract.samples(resNormal_EnXvar,n = 1e4)
sample_EnXvar
sample_EnXvar2ndKorr <- extract.samples(resNormal_EnXvar_2ndKorr,n = 1e4)
sample_Full <- extract.samples(resNormal_Full,n=1e4)
mu <- matrix(NA,ncol=3,nrow=1e4)
colnames(mu) <- c("EnXvar","EnXvar2ndKorr","Full")
for (i in 1:1e4) {
mu[i,1] <- sample_EnXvar[i,1] + sample_EnXvar[i,2] * mean(data$area)
mu[i,2] <- sample_EnXvar2ndKorr[i,1] + sample_EnXvar2ndKorr[i,2] * mean(data$antal_rum)
mu[i,3] <- sample_Full[i,1] + sample_Full[i,2]*mean(data$area) +
sample_Full[i,3]*mean(data$antal_rum) +
sample_Full[i,4]*mean(data$avgift) +
sample_Full[i,5]*mean(data$trappor) +
sample_Full[i,6]*0 +
sample_Full[i,7]*0
}
mu[,1]
y_df <- data.frame("y_enxvar" = rnorm(1e4,mu[,1],exp(sample_EnXvar$logsigma)),
"y_enxvar2ndkorr" = rnorm(1e4,mu[,2],exp(sample_EnXvar2ndKorr$logsigma)),
"y_full" = rnorm(1e4,mu[,3],exp(sample_Full$logsigma)))
y_df
y <- data.frame("y_enxvar" = rnorm(1e4,mu[,1],exp(sample_EnXvar$logsigma)),
"y_enxvar2ndkorr" = rnorm(1e4,mu[,2],exp(sample_EnXvar2ndKorr$logsigma)),
"y_full" = rnorm(1e4,mu[,3],exp(sample_Full$logsigma)))
y_intervall <- WAIC_df[1,2]*y[,1] + WAIC_df[2,2]*y[,2] + WAIC_df[3,2]*y[,3]
PI(y_intervall,prob = 0.952)
AIC_Null <- dev_Null + 2 * length(coef(resNormal_Null))
AIC_EnXvar <- dev_EnXvar + 2 * length(coef(resNormal_EnXvar))
AIC_Full <- dev_Full + 2 * length(coef(resNormal_Full))
samples_Null <- extract.samples(resNormal_Null, n = 1e4)
deviance_posterior_NULL <- c(rep(NA,nrow(samples_Null)))
for (i in 1:nrow(samples_Null)) {
deviance_posterior_NULL[i] <- (-2)*sum( dnorm(
data$y ,
mean=samples_Null[i,1] ,
sd=exp(samples_Null[i,2]) ,
log=TRUE ) )
}
D_bar_null <- mean(deviance_posterior_NULL)
D_hat_null <- (-2)*sum( dnorm(
data$y ,
mean=mean(samples_Null[,1]) ,
sd=exp(mean(samples_Null[,2])) ,
log=TRUE ) )
DIC(resNormal_Null)
deviance_posterior_EnXvar <- c(rep(NA,nrow(samples_EnXvar)))
samples_EnXvar <- extract.samples(resNormal_EnXvar, n = 1e4)
for (i in 1:nrow(samples_EnXvar)) {
deviance_posterior_EnXvar[i] <- (-2)*sum( dnorm(
data$y ,
mean=samples_EnXvar[i,1] + samples_EnXvar[i,2]*data$area ,
sd=exp(samples_EnXvar[i,3]) ,
log=TRUE ) )
}
DIC_null <- D_bar_null + (D_bar_null - D_hat_null)
D_bar_EnXvar <- mean(deviance_posterior_EnXvar)
D_hat_EnXvar <- (-2)*sum( dnorm(
data$y ,
mean=mean(samples_EnXvar[,1]) + mean(samples_EnXvar[,2]) * data$area ,
sd=exp(mean(samples_EnXvar[,3])) ,
log=TRUE ) )
DIC(resNormal_EnXvar)
samples_Full <- extract.samples(resNormal_Full, n = 1e4)
DIC_EnXvar <- D_bar_EnXvar + (D_bar_EnXvar - D_hat_EnXvar)
for (i in 1:nrow(samples_Full)) {
deviance_posterior_Full[i] <- (-2)*sum( dnorm(
data$y ,
mean=samples_Full[i,1] +  samples_Full[i,2]*data$area +
samples_Full[i,3]*data$antal_rum + samples_Full[i,4]*data$avgift +
samples_Full[i,5]*data$trappor + samples_Full[i,6]*data$cityyes +
samples_Full[i,7]*data$sydyes,
sd=exp(samples_Full[i,8]) ,
log=TRUE ) )
}
deviance_posterior_Full <- c(rep(NA,nrow(samples_Full)))
theta_Null <- coef(resNormal_Null)
dev_Null <- (-2)*sum( dnorm(
data$y ,
mean=theta_Null[1] ,
sd=exp(theta_Null[2]) ,
log=TRUE ) )
dev_Null
theta_EnXvar <- coef(resNormal_EnXvar)
dev_EnXvar <- (-2)*sum( dnorm(
data$y ,
mean=theta_EnXvar[1] + theta_EnXvar[2]*data$area,
sd=exp(theta_EnXvar[3]) ,
log=TRUE ) )
# Deviance Full
theta_Full <- coef(resNormal_Full)
dev_EnXvar
dev_Full <- (-2)*sum( dnorm(
data$y ,
mean=theta_Full[1] + theta_Full[2]*data$area + theta_Full[3]*data$antal_rum +
theta_Full[4]*data$avgift + theta_Full[5]*data$trappor +
theta_Full[6]*data$cityyes + theta_Full[7]*data$sydyes,
sd=exp(theta_Full[8]) ,
log=TRUE ) )
dev_Full
#
dev_Null
dev_EnXvar
#
precis(resNormal_Full)
train_data <- data[1:29,]
dev_Full
resNormal_Null_train <- map(flist, data=train_data)
vali_data <- data[30:57,]
precis(resNormal_Null)
#Null modell traindata
flist <- alist(
y ~ dnorm(mu, exp(logsigma)) , # likelihood fr?n normalf?rdelning, liter per mil
mu ~ dnorm( 3 , 10 ) , # normalf?rdelad prior
logsigma ~ dnorm ( 0 , 1 )
)
#En variabel
flist <- alist(
y ~ dnorm(mu, exp(logsigma)) , # likelihood fr?n normalf?rdelning, liter per mil
mu <- b0 + b1*area , # hur mu ?r l?nkad till f?rklaringsvariabler.
b0 ~ dnorm( 3 , 10 ) , # normalf?rdelad prior f?r intercept
b1 ~ dnorm( 0 , 10 ) ,
logsigma ~ dnorm ( 0, 1 )
)
#Full modell
flist <- alist(
y ~ dnorm(mu, exp(logsigma)) , # likelihood fr?n normalf?rdelning, liter per mil
mu <- b0 + b1*area + b2*antal_rum + b3*avgift + b4*trappor + b5*cityyes + b6*sydyes, # hur mu ?r l?nkad till f?rklaringsvariabler.
b0 ~ dnorm( 3 , 10 ) , # normalf?rdelad prior f?r intercept
c(b1,b2,b3,b4) ~ dnorm( 0 , 10 ) ,
c(b5,b6) ~ dnorm( 0 , 10 ) ,
logsigma ~ dnorm ( 0, 1 )
)
resNormal_Full_train <- map(flist, data=train_data)
precis(resNormal_EnXvar)
theta_Null <- coef(resNormal_Null_train)
dev_Null_Train
dev_Null_Train <- (-2)*sum( dnorm(
train_data$y ,
mean=theta_Null[1] ,
sd=exp(theta_Null[2]) ,
log=TRUE ) )
resNormal_EnXvar_train <- map(flist, data=train_data)
theta_EnXvar <- coef(resNormal_EnXvar_train)
dev_EnXvar_Train <- (-2)*sum( dnorm(
train_data$y ,
mean=theta_EnXvar[1] + theta_EnXvar[2]*train_data$area,
sd=exp(theta_EnXvar[3]) ,
log=TRUE ) )
dev_EnXvar_Train
dev_Full_Train
# Deviance Full
theta_Full <- coef(resNormal_Full_train)
dev_Full_Train <- (-2)*sum( dnorm(
train_data$y ,
mean=theta_Full[1] + theta_Full[2]*train_data$area + theta_Full[3]*train_data$antal_rum +
theta_Full[4]*train_data$avgift + theta_Full[5]*train_data$trappor +
theta_Full[6]*train_data$cityyes + theta_Full[7]*train_data$sydyes,
sd=exp(theta_Full[8]) ,
log=TRUE ) )
theta_Null <- coef(resNormal_Null_train)
dev_Null_Vali <- (-2)*sum( dnorm(
vali_data$y ,
mean=theta_Null[1] ,
sd=exp(theta_Null[2]) ,
log=TRUE ) )
dev_Null_Vali
theta_EnXvar <- coef(resNormal_EnXvar_train)
dev_EnXvar_Vali <- (-2)*sum( dnorm(
vali_data$y ,
mean=theta_EnXvar[1] + theta_EnXvar[2]*vali_data$area,
sd=exp(theta_EnXvar[3]) ,
log=TRUE ) )
dev_EnXvar_Vali
theta_Full <- coef(resNormal_Full_train)
dev_Full_Vali <- (-2)*sum( dnorm(
vali_data$y ,
mean=theta_Full[1] + theta_Full[2]*vali_data$area + theta_Full[3]*vali_data$antal_rum +
theta_Full[4]*vali_data$avgift + theta_Full[5]*vali_data$trappor +
theta_Full[6]*vali_data$cityyes + theta_Full[7]*vali_data$sydyes,
sd=exp(theta_Full[8]) ,
log=TRUE ) )
dev_Full_Vali
#
dev_Null_Train
dev_Null_Vali
#
dev_EnXvar_Train
dev_EnXvar_Vali
#
dev_Full_Train
dev_Full_Vali
AIC_Null <- dev_Null + 2 * length(coef(resNormal_Null))
AIC_EnXvar <- dev_EnXvar + 2 * length(coef(resNormal_EnXvar))
AIC_Full <- dev_Full + 2 * length(coef(resNormal_Full))
samples_Null <- extract.samples(resNormal_Null, n = 1e4)
for (i in 1:nrow(samples_Null)) {
deviance_posterior_NULL[i] <- (-2)*sum( dnorm(
data$y ,
mean=samples_Null[i,1] ,
sd=exp(samples_Null[i,2]) ,
log=TRUE ) )
}
deviance_posterior_NULL <- c(rep(NA,nrow(samples_Null)))
D_bar_null <- mean(deviance_posterior_NULL)
D_hat_null <- (-2)*sum( dnorm(
data$y ,
mean=mean(samples_Null[,1]) ,
sd=exp(mean(samples_Null[,2])) ,
log=TRUE ) )
DIC_null <- D_bar_null + (D_bar_null - D_hat_null)
DIC(resNormal_Null)
samples_EnXvar <- extract.samples(resNormal_EnXvar, n = 1e4)
for (i in 1:nrow(samples_EnXvar)) {
deviance_posterior_EnXvar[i] <- (-2)*sum( dnorm(
data$y ,
mean=samples_EnXvar[i,1] + samples_EnXvar[i,2]*data$area ,
sd=exp(samples_EnXvar[i,3]) ,
log=TRUE ) )
}
deviance_posterior_EnXvar <- c(rep(NA,nrow(samples_EnXvar)))
D_bar_EnXvar <- mean(deviance_posterior_EnXvar)
DIC_EnXvar <- D_bar_EnXvar + (D_bar_EnXvar - D_hat_EnXvar)
D_hat_EnXvar <- (-2)*sum( dnorm(
data$y ,
mean=mean(samples_EnXvar[,1]) + mean(samples_EnXvar[,2]) * data$area ,
sd=exp(mean(samples_EnXvar[,3])) ,
log=TRUE ) )
samples_Full <- extract.samples(resNormal_Full, n = 1e4)
DIC(resNormal_EnXvar)
deviance_posterior_Full <- c(rep(NA,nrow(samples_Full)))
for (i in 1:nrow(samples_Full)) {
deviance_posterior_Full[i] <- (-2)*sum( dnorm(
data$y ,
mean=samples_Full[i,1] +  samples_Full[i,2]*data$area +
samples_Full[i,3]*data$antal_rum + samples_Full[i,4]*data$avgift +
samples_Full[i,5]*data$trappor + samples_Full[i,6]*data$cityyes +
samples_Full[i,7]*data$sydyes,
sd=exp(samples_Full[i,8]) ,
log=TRUE ) )
}
D_bar_Full <- mean(deviance_posterior_Full)
D_hat_Full <- (-2)*sum( dnorm(
data$y ,
mean=mean(samples_Full[,1]) + mean(samples_Full[,2])*data$area +
mean(samples_Full[,3])*data$antal_rum + mean(samples_Full[,4])*data$avgift +
mean(samples_Full[,5])*data$trappor + mean(samples_Full[,6])*data$cityyes +
mean(samples_Full[,7])*data$sydyes,
sd=exp(mean(samples_Full[,8])) ,
log=TRUE ) )
DIC_Full <- D_bar_Full + (D_bar_Full - D_hat_Full)
DIC(resNormal_Full)
DIC_null
DIC_EnXvar
DIC_Full
WAIC_Null <- WAIC(resNormal_Null)[1]
WAIC_Null
WAIC_EnXvar <- WAIC(resNormal_EnXvar)[1]
WAIC_EnXvar
WAIC_Full <- WAIC(resNormal_Full)[1]
WAIC_Full
cor(data)
#i
flist <- alist(
y ~ dnorm(mu, exp(logsigma)) , # likelihood fr?n normalf?rdelning, liter per mil
mu <- b0 + b1*antal_rum , # hur mu ?r l?nkad till f?rklaringsvariabler.
b0 ~ dnorm( 3 , 10 ) , # normalf?rdelad prior f?r intercept
b1 ~ dnorm( 0 , 10 ) ,
logsigma ~ dnorm ( 0, 1 )
)
resNormal_EnXvar_2ndKorr <- map(flist, data=data)
#ii
resNormal_EnXvar
#iii
resNormal_Full
# --- --- f)
WAIC_EnXvar_2ndKorr  <- WAIC(resNormal_EnXvar_2ndKorr)[1]
WAIC_df <- data.frame("Modell" = c(WAIC_EnXvar ,WAIC_EnXvar_2ndKorr, WAIC_Full), "Weight" = c(NA,NA,NA))
rownames(WAIC_df)<-c("EnXvar","EnXvar_2ndkorr","FULL")
for(i in 1:nrow(WAIC_df)) {
WAIC_df[i,2] <- exp(-0.5 * (WAIC_df[i,1] - min(WAIC_df[,1]))) /
sum(exp(-0.5 * (WAIC_df[,1] - min(WAIC_df[,1]))))
}
precis(resNormal_EnXvar)
precis(resNormal_EnXvar_2ndKorr)
precis(resNormal_Full)
sample_EnXvar <- extract.samples(resNormal_EnXvar,n = 1e4)
sample_EnXvar2ndKorr <- extract.samples(resNormal_EnXvar_2ndKorr,n = 1e4)
sample_Full <- extract.samples(resNormal_Full,n=1e4)
mu <- matrix(NA,ncol=3,nrow=1e4)
colnames(mu) <- c("EnXvar","EnXvar2ndKorr","Full")
for (i in 1:1e4) {
mu[i,1] <- sample_EnXvar[i,1] + sample_EnXvar[i,2] * mean(data$area)
mu[i,2] <- sample_EnXvar2ndKorr[i,1] + sample_EnXvar2ndKorr[i,2] * mean(data$antal_rum)
mu[i,3] <- sample_Full[i,1] + sample_Full[i,2]*mean(data$area) +
sample_Full[i,3]*mean(data$antal_rum) +
sample_Full[i,4]*mean(data$avgift) +
sample_Full[i,5]*mean(data$trappor) +
sample_Full[i,6]*0 +
sample_Full[i,7]*0
}
y <- data.frame("y_enxvar" = rnorm(1e4,mu[,1],exp(sample_EnXvar$logsigma)),
"y_enxvar2ndkorr" = rnorm(1e4,mu[,2],exp(sample_EnXvar2ndKorr$logsigma)),
"y_full" = rnorm(1e4,mu[,3],exp(sample_Full$logsigma)))
y_intervall <- WAIC_df[1,2]*y[,1] + WAIC_df[2,2]*y[,2] + WAIC_df[3,2]*y[,3]
PI(y_intervall,prob = 0.952)
theta_Null
